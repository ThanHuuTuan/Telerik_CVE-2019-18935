local http = require "http"
local stdnse = require "stdnse"
local string = require "string"
local table = require "table"
local vulns = require "vulns"
local shortport = require "shortport"


local catch = function()
		client_ident:close()
		client_service:close()
	end

description = [[
The insecure deserialization of JSON objects in Telerik UI for ASP.NET
results in arbitrary remote code execution.  An attacker can break the 
RadAsyncUpload encryption (or have prior knowledge of your custom 
encryption keys) and stage a malicious request. 

Affects: v2011.1.315 - 2017.2.621 without keys
         v2011.1.315 - 2020.1.114 with encryption keys

Big Ups: Markus Wulftange && Paul Taylor (@bao7uo) 
Ref: https://github.com/trustedsec/cve-2019-19781
See: https://nvd.nist.gov/vuln/detail/CVE-2019-19781 for more information.  
]]


-- @changelog
-- 2020-05-15 - hacked together by Brent 'becrevex' Chambers - `support free info`

author = "Brent 'becrevex' Chambers"
license = "Same as Nmap--See https://nmap.org/book/man-legal.html"
categories = {"safe", "discovery"}

portrule = shortport.port_or_service (443, "https", "tcp")

local result = {}
local path = {"/Telerik.Web.UI.WebResource.axd?type=rau"}
local pattern = "20[0-9]{2}(%.[0-9]*)+"

action = function(host, port)

	local vuln_table = {
		title = "CVE-2019-18935 - Telerik UI Javascript Deserialization RCE",
		state = vulns.STATE.NOT_VULN,
		risk_factor = "High",
		references = {
		  'https://nvd.nist.gov/vuln/detail/CVE-2019-18935',
		},
		IDS = {
		  CVE = ' CVE-2019-18935',
		  CWE = ' CWE-913'
		},
		scores = {
		  CVSS2 =  '8.5'
		},
			description = [[
			Telerik UI for ASP.NET AJAX through 2019.3.1023 contains a 
			.NET deserialization RCE vulnerability in the RadAsyncUpload function. ]]

			-- 	(As of 2020.1.114, a default setting prevents the exploit. 
			--  In 2019.3.1023, but not earlier versions, a non-default 
			--  setting can prevent exploitation.)]]
			
			-- This is exploitable 
			-- when the encryption keys are known due to the presence of CVE-2017-11317 or 
			-- CVE-2017-11357.  Exploitation can result in remote code execution. 
		}
	
	local report = vulns.Report:new(SCRIPT_NAME, host, port)


	stdnse.debug1("Connecting to %s:%s", host.targetname or host.ip, port.number)
	local data = http.get(host, port, "/aspnet-ajax/Telerik.Web.UI.WebResource.axd?type=rau")
	local data2 = http.get(host, port, "/Telerik.Web.UI.WebResource.axd?type=rau")
	local site1 = http.get(host, port, "/")

	if data and data.status then
		if string.match(data.body, "RadAsyncUpload handler is registered succesfully") then
			stdnse.debug1("Telerik file uploader is available.")
			table.insert(result, "\n[!] Possibly vulnerable to CVE-2019-18935 (Telerik UI RCE)")	
			local response = http.get(host, port, "/aspnet-ajax")
			if response.body:match("2019%.[0-2]%.%d%d%d%.%d%d") then
				local version = response['body']:match("2019%.[0-2]%.%d%d%d%.%d%d")
				stdnse.print_debug(1, "%s:..Version found: " .. version, SCRIPT_NAME, response.body)
				vuln_table.state = vulns.STATE.VULN					
			else
				stdnse.debug1("Not vulnerable CVE-2019-18935 (TelerikUI RCE)")
			end
		else 

			table.insert(result, "\n[!] Not vulnerable CVE-2019-18935 (TelerikUI RCE)")
		end
	end
	return report:make_output(vuln_table)
end
